<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="chanchal" ignored="19" name="Default test" tests="2" failures="1" timestamp="11 Dec 2018 10:18:47 GMT" time="255.5" errors="0">
  <testcase name="LoginScreen" time="23.712" classname="project.Test1"/>
  <testcase name="RestaurantsCategory" time="212.394" classname="project.Test1">
    <failure type="org.openqa.selenium.NoSuchElementException" message="An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;3.11.0&amp;apos;, revision: &amp;apos;e59cfb3&amp;apos;, time: &amp;apos;2018-03-11T20:26:55.152Z&amp;apos;
System info: host: &amp;apos;chanchal&amp;apos;, ip: &amp;apos;127.0.1.1&amp;apos;, os.name: &amp;apos;Linux&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;4.13.0-36-generic&amp;apos;, java.version: &amp;apos;1.8.0_181&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.app.jeebo.activity.Spla..., appPackage: com.app.jeebo, databaseEnabled: false, desired: {appActivity: com.app.jeebo.activity.Spla..., appPackage: com.app.jeebo, deviceName: 4d00b5844e003125, platformName: android, version: 7.0}, deviceManufacturer: samsung, deviceModel: SM-G900H, deviceName: 4d00b5844e003125, deviceScreenSize: 1080x1920, deviceUDID: 4d00b5844e003125, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, platform: LINUX, platformName: LINUX, platformVersion: 6.0.1, takesScreenshot: true, version: 7.0, warnings: {}, webStorageEnabled: false}
Session ID: 6c921297-4dc7-43c4-a753-06b4c08259a4
*** Element info: {Using=id, value=com.app.jeebo:id/iv_fab_menu}">
      <![CDATA[org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'chanchal', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.13.0-36-generic', java.version: '1.8.0_181'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.app.jeebo.activity.Spla..., appPackage: com.app.jeebo, databaseEnabled: false, desired: {appActivity: com.app.jeebo.activity.Spla..., appPackage: com.app.jeebo, deviceName: 4d00b5844e003125, platformName: android, version: 7.0}, deviceManufacturer: samsung, deviceModel: SM-G900H, deviceName: 4d00b5844e003125, deviceScreenSize: 1080x1920, deviceUDID: 4d00b5844e003125, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, platform: LINUX, platformName: LINUX, platformVersion: 6.0.1, takesScreenshot: true, version: 7.0, warnings: {}, webStorageEnabled: false}
Session ID: 6c921297-4dc7-43c4-a753-06b4c08259a4
*** Element info: {Using=id, value=com.app.jeebo:id/iv_fab_menu}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:129)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:365)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:70)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:218)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:311)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at com.jeebo.home.CommonFunctions.clickAndCollectDelivery(CommonFunctions.java:95)
at Base.Capabilities.Category(Capabilities.java:214)
at project.Test1.RestaurantsCategory(Test1.java:962)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- RestaurantsCategory -->
  <testcase name="manageAffiliates" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- manageAffiliates -->
  <testcase name="edit_profile_camera" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- edit_profile_camera -->
  <testcase name="signUp1stUser" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- signUp1stUser -->
  <testcase name="addNewAddress" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- addNewAddress -->
  <testcase name="edit_profile_gallery" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- edit_profile_gallery -->
  <testcase name="notification" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- notification -->
  <testcase name="PurchaseHistory" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- PurchaseHistory -->
  <testcase name="signUp" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- signUp -->
  <testcase name="ManageAddress" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- ManageAddress -->
  <testcase name="deleteAddress" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- deleteAddress -->
  <testcase name="EdittingText" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- EdittingText -->
  <testcase name="AddNewCard" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- AddNewCard -->
  <testcase name="DeleteCard" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- DeleteCard -->
  <testcase name="renameQuitList" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- renameQuitList -->
  <testcase name="SetInfoInProfile" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- SetInfoInProfile -->
  <testcase name="NotificationPreferences" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- NotificationPreferences -->
  <testcase name="deleteList" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- deleteList -->
  <testcase name="ChangePassword" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- ChangePassword -->
  <testcase name="createList" time="0.0" classname="project.Test1">
    <ignored/>
  </testcase> <!-- createList -->
</testsuite> <!-- Default test -->
